planeVersion: v1.9.2

dockerRegistry:
  enabled: false
  registry: 'index.docker.io/v1/'
  loginid: ''
  password: ''

license:
  licenseServer: https://prime.plane.so
  licenseDomain: 'plane.example.com'

ingress:
  enabled: true
  minioHost: ''
  rabbitmqHost: ''
  ingressClass: 'nginx'
  ingress_annotations: { "nginx.ingress.kubernetes.io/proxy-body-size": "5m" }

ssl:
  tls_secret_name: '' # If you have a custom TLS secret name
  # If you want to use Let's Encrypt, set createIssuer and generateCerts to true
  createIssuer: false
  issuer: http # Allowed : cloudflare, digitalocean, http
  token: '' # not required for http
  server: https://acme-v02.api.letsencrypt.org/directory
  email: plane@example.com
  generateCerts: false

services:
  redis:
    local_setup: true
    image: valkey/valkey:7.2.5-alpine
    servicePort: 6379
    volumeSize: 500Mi
    pullPolicy: IfNotPresent
    assign_cluster_ip: false

  postgres:
    local_setup: true
    image: postgres:15.7-alpine
    servicePort: 5432
    volumeSize: 2Gi
    pullPolicy: IfNotPresent
    assign_cluster_ip: false

  rabbitmq:
    local_setup: true
    image: rabbitmq:3.13.6-management-alpine
    servicePort: 5672
    managementPort: 15672
    volumeSize: 100Mi
    pullPolicy: IfNotPresent
    default_user: plane
    default_password: plane
    external_rabbitmq_url: ''
    assign_cluster_ip: false

  minio:
    local_setup: true
    image: minio/minio:latest
    image_mc: minio/mc:latest
    volumeSize: 3Gi
    pullPolicy: IfNotPresent
    root_user: admin
    root_password: password
    assign_cluster_ip: false
    env:
      minio_endpoint_ssl: false

  web:
    replicas: 1
    memoryLimit: 1000Mi
    cpuLimit: 500m
    image: artifacts.plane.so/makeplane/web-commercial
    pullPolicy: Always
    assign_cluster_ip: false

  monitor:
    memoryLimit: 1000Mi
    cpuLimit: 500m
    image: artifacts.plane.so/makeplane/monitor-commercial
    pullPolicy: Always
    volumeSize: 100Mi
    assign_cluster_ip: false

  space:
    replicas: 1
    memoryLimit: 1000Mi
    cpuLimit: 500m
    image: artifacts.plane.so/makeplane/space-commercial
    pullPolicy: Always
    assign_cluster_ip: false

  admin:
    replicas: 1
    memoryLimit: 1000Mi
    cpuLimit: 500m
    image: artifacts.plane.so/makeplane/admin-commercial
    pullPolicy: Always
    assign_cluster_ip: false

  live:
    replicas: 1
    memoryLimit: 1000Mi
    cpuLimit: 500m
    image: artifacts.plane.so/makeplane/live-commercial
    pullPolicy: Always
    assign_cluster_ip: false

  api:
    replicas: 1
    memoryLimit: 1000Mi
    cpuLimit: 500m
    image: artifacts.plane.so/makeplane/backend-commercial
    pullPolicy: Always
    assign_cluster_ip: false

  worker:
    replicas: 1
    memoryLimit: 1000Mi
    cpuLimit: 500m

  beatworker:
    replicas: 1
    memoryLimit: 1000Mi
    cpuLimit: 500m

  silo:
    enabled: true
    replicas: 1
    memoryLimit: 1000Mi
    cpuLimit: 500m
    image: artifacts.plane.so/makeplane/silo-commercial
    pullPolicy: Always
    assign_cluster_ip: false
    connectors:
      slack:
        enabled: false
        client_id: ''
        client_secret: ''
      github:
        enabled: false
        client_id: ''
        client_secret: ''
        app_name: ''
        app_id: ''
        private_key: ''
      gitlab:
        enabled: false
        client_id: ''
        client_secret: ''

  email_service:
    enabled: true
    replicas: 1
    memory_limit: 1000Mi
    cpu_limit: 500m
    image: artifacts.plane.so/makeplane/email-commercial

external_secrets:
  # Name of the existing Kubernetes Secret resource; see README for more details
  rabbitmq_existingSecret: ''
  pgdb_existingSecret: ''
  doc_store_existingSecret: ''
  app_env_existingSecret: ''
  live_env_existingSecret: ''
  silo_env_existingSecret: ''

env:
  storageClass: ''

  # REDIS
  remote_redis_url: '' #INCASE OF REMOTE REDIS ONLY

  # POSTGRES DB VALUES
  pgdb_username: plane
  pgdb_password: plane
  pgdb_name: plane
  pgdb_remote_url: '' #INCASE OF REMOTE PG DB URL ONLY

  # DATA STORE
  docstore_bucket: uploads
  doc_upload_size_limit: '5242880' # 5MB

  # REQUIRED IF MINIO LOCAL SETUP IS FALSE
  aws_access_key: ''
  aws_secret_access_key: ''
  aws_region: ''
  aws_s3_endpoint_url: ''

  secret_key: "60gp0byfz2dvffa45cxl20p1scy9xbpf6d8c5y0geejgkyp1b5"
  api_key_rate_limit: "60/minute"

  sentry_dsn: ''
  sentry_environment: ''

  cors_allowed_origins: ''
  instance_admin_email: ''

  live_sentry_dsn: ""
  live_sentry_environment: ""
  live_sentry_traces_sample_rate: ""
  live_server_secret_key: "htbqvBJAgpm9bzvf3r4urJer0ENReatceh"

  silo_envs:
    sentry_dsn: ''
    sentry_environment: ''
    sentry_traces_sample_rate: ''
    batch_size: 100
    mq_prefetch_count: 1
    request_interval: 400
    hmac_secret_key: ''
    aes_secret_key: 'dsOdt7YrvxsTIFJ37pOaEVvLxN8KGBCr'
    cors_allowed_origins: ''

  email_service_envs:
    smtp_domain: ''
