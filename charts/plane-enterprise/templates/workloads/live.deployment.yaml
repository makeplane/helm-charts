
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-live
  labels:
    app.name: {{ .Release.Namespace }}-{{ .Release.Name }}-live
spec:
  type: ClusterIP
  {{- if not .Values.services.live.assign_cluster_ip }}
  clusterIP: None
  {{- end }}
  ports:
  - name: live-3000
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app.name: {{ .Release.Namespace }}-{{ .Release.Name }}-live

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-live-wl
  {{- if gt (len .Values.services.live.labels) 0 }}
  labels:
    {{- range $key, $value := .Values.services.live.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  {{- if gt (len .Values.services.live.annotations) 0 }}
  annotations:
    {{- range $key, $value := .Values.services.live.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  replicas: {{ .Values.services.live.replicas | default 1}}
  selector:
    matchLabels:
      app.name: {{ .Release.Namespace }}-{{ .Release.Name }}-live
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      labels:
        app.name: {{ .Release.Namespace }}-{{ .Release.Name }}-live
      annotations:
        timestamp: {{ now | quote }}
    spec:
      containers:
      - name: {{ .Release.Name }}-live
        imagePullPolicy: {{ .Values.services.live.pullPolicy | default "Always" }}
        image: {{ .Values.services.live.image | default "artifacts.plane.so/makeplane/live-commercial" }}:{{ .Values.planeVersion }}
        stdin: true
        tty: true
        resources:
          requests:
            memory: {{ .Values.services.live.memoryRequest | default "50Mi" | quote }}
            cpu: {{ .Values.services.live.cpuRequest | default "50m" | quote }}
          limits:
            memory: {{ .Values.services.live.memoryLimit  | default "1000Mi" | quote }}
            cpu: {{ .Values.services.live.cpuLimit | default "500m" | quote}}
        envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-live-vars
              optional: false
          - secretRef:
              name: {{ if not (empty .Values.external_secrets.live_env_existingSecret) }}{{ .Values.external_secrets.live_env_existingSecret }}{{ else }}{{ .Release.Name }}-live-secrets{{ end }}
              optional: false
      serviceAccount: {{ .Release.Name }}-srv-account
      serviceAccountName: {{ .Release.Name }}-srv-account

---
